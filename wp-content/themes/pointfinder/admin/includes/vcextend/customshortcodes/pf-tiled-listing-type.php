<?phpfunction pf_timage_of_listing_func( $atts ) {  extract( shortcode_atts( array(    'listingtype' => '',    'cols' => 'grid4',    'textcolor' => '#fff',    'itemlimit' => '8',    'orderby' => 'name',    'sortby' => 'ASC',    'style' => 'grid',    'effect' => 1  ), $atts ) );            $output = $image = $iconimage = $term_icon_area = $textcolor_style = $background_effect = '';      if (!empty($effect)) {        switch ($effect) {case 1:$background_effect = 'BackgroundRR';case 2:$background_effect = 'BackgroundRS';break;case 3:$background_effect = 'BackgroundS';break;}      }else{        $background_effect = 'BackgroundRR';      }      if (!empty($textcolor)) {          $textcolor_style = ' style="color:'.$textcolor.'"';      }      $listing_meta = get_option('pointfinderltypes_vars');      if (!is_array($listingtype) && !empty($listingtype)) {          $listingtypes = pfstring2BasicArray($listingtype,',');      }elseif(empty($listingtype)){          $listingtypes = get_terms(array(              'taxonomy' => 'pointfinderltypes',              'orderby' => $orderby,              'order' => $sortby,              'hide_empty' => false,              'number' => $itemlimit,              'fields' => 'ids'          ));      }    $template_directory_uri = get_template_directory_uri();    $general_crop2 = PFSizeSIssetControl('general_crop2','',2);    $general_retinasupport = PFSAIssetControl('general_retinasupport','','0');    if($general_retinasupport == 1){$pf_retnumber = 2;}else{$pf_retnumber = 1;}    $gridrandno_orj = PF_generate_random_string_ig();    if($style == 'grid'){          $setupsizelimitconf_general_gridsize2_height = PFSizeSIssetControl('setupsizelimitconf_general_gridsize2','height',416);        $setupsizelimitconf_general_gridsize2_width = PFSizeSIssetControl('setupsizelimitconf_general_gridsize2','width',555);        $setupsizelimitconf_general_gridsize3_height = PFSizeSIssetControl('setupsizelimitconf_general_gridsize3','height',270);        $setupsizelimitconf_general_gridsize3_width = PFSizeSIssetControl('setupsizelimitconf_general_gridsize3','width',360);        $setupsizelimitconf_general_gridsize4_width = PFSizeSIssetControl('setupsizelimitconf_general_gridsize4','width',263);        $setupsizelimitconf_general_gridsize4_height = PFSizeSIssetControl('setupsizelimitconf_general_gridsize4','height',197);        switch($cols){            case 'grid2':                $pfgrid_output = 'pf2col';                $pfgridcol_output = 'col-lg-6 col-md-6 col-sm-6';                $featured_image_width = $setupsizelimitconf_general_gridsize2_width*$pf_retnumber;                $featured_image_height = $setupsizelimitconf_general_gridsize2_height*$pf_retnumber;                break;            case 'grid3':                $pfgrid_output = 'pf3col';                $pfgridcol_output = 'col-lg-4 col-md-6 col-sm-6';                $featured_image_width = $setupsizelimitconf_general_gridsize3_width*$pf_retnumber;                $featured_image_height = $setupsizelimitconf_general_gridsize3_height*$pf_retnumber;                break;            case 'grid4':                $pfgrid_output = 'pf4col';                $pfgridcol_output = 'col-lg-3 col-md-4 col-sm-6';                $featured_image_width = $setupsizelimitconf_general_gridsize4_width*$pf_retnumber;                $featured_image_height = $setupsizelimitconf_general_gridsize4_height*$pf_retnumber;                break;            default:                $pfgrid_output = 'pf4col';                $pfgridcol_output = 'col-lg-3 col-md-4 col-sm-6';                $featured_image_width = $setupsizelimitconf_general_gridsize4_width*$pf_retnumber;                $featured_image_height = $setupsizelimitconf_general_gridsize4_height*$pf_retnumber;            break;        }              $output .= '<ul class="pf-tiled-term-gallery '.$gridrandno_orj.' pfitemlists-content-elements '.$pfgrid_output.'">';            foreach ($listingtypes as $listingtype_single) {                $term_info = get_term_by( 'id', $listingtype_single, 'pointfinderltypes');          $iconimage = $term_icon_area = '';                if ($term_info->count > 1) {                    $term_count = $term_info->count .' '. esc_html__( 'Listings', 'pointfindert2d' );                }elseif($term_info->count = 1){                    $term_count = $term_info->count .' '. esc_html__( 'Listing', 'pointfindert2d' );                }else{                    $term_count = '';                }                $this_term_icon = (isset($listing_meta[$listingtype_single]['pf_icon_of_listing']))? $listing_meta[$listingtype_single]['pf_icon_of_listing']:'';                $img_arr = pointfinder_featured_image_getresized_ex($listing_meta,$listingtype_single,$template_directory_uri,$general_crop2,$general_retinasupport,$featured_image_width,$featured_image_height);                                if (!empty($img_arr['featured_image'])) {                    $term_link = get_term_link($term_info->slug,'pointfinderltypes');                    if (isset($this_term_icon[0])) {                        $iconimage = wp_get_attachment_image_src($this_term_icon[0], 'full');                    }                                        if (isset($iconimage[0])) {                        $term_icon_area = '<div class="pf-main-term-icon-ct"><img src="'.$iconimage[0].'"></div>';                    }                    $output .= '<li class="pf-tiled-gallery-image pfgallery-item animated fadeIn '.$pfgridcol_output.'">';                    $output .= '<div class="termgutter-sizer"><a href="'.$term_link.'">';                        $output .= ''.$term_icon_area.'<div class="PXXImageWrapper '.$background_effect.'"><img src="'.$img_arr['featured_image'].'" alt=""/><div class="ImageOverlayTi"></div><div class="ImageOverlayTix"></div><div class="pf-tiled-gallery-ctname"'.$textcolor_style.'>'.$term_info->name.'</div><div class="pf-tiled-gallery-ctcount"'.$textcolor_style.'>'.$term_count.'</div></div>';                    $output .= '</a></div>';                    $output .= '</li>';                }            }        $output .= '</ul>';        $output .= '<script>        (function($) {        "use strict";            $(function() {                $(".'.$gridrandno_orj.'").isotope({                  layoutMode: "fitRows",                  fitRows: {                     gutter: 0                  },                      itemSelector: ".'.$gridrandno_orj.' .pfgallery-item"                });            });        })(jQuery);        </script>        ';    }else{      $output .= '<ul class="pf-tiled-term-gallery pfmasonry '.$gridrandno_orj.'">';        foreach ($listingtypes as $listingtype_single) {          $term_info = get_term_by( 'id', $listingtype_single, 'pointfinderltypes');          $iconimage = $term_icon_area = '';          if ($term_info->count > 1) {            $term_count = $term_info->count .' '. esc_html__( 'Listings', 'pointfindert2d' );          }elseif($term_info->count = 1){            $term_count = $term_info->count .' '. esc_html__( 'Listing', 'pointfindert2d' );          }else{            $term_count = '';          }          $this_term_icon = (isset($listing_meta[$listingtype_single]['pf_icon_of_listing']))? $listing_meta[$listingtype_single]['pf_icon_of_listing']:'';          $this_masonry_size = (isset($listing_meta[$listingtype_single]['pf_masonry_size']))? $listing_meta[$listingtype_single]['pf_masonry_size']:'';          if (isset($this_masonry_size[0])) {            $this_masonry_size = $this_masonry_size[0];          }          switch ($this_masonry_size) {            case 'l':              $class_of_this = 'pfmsgrid-item--large';              $img_arr = pointfinder_featured_image_getresized_ex($listing_meta,$listingtype_single,$template_directory_uri,1,0,564,564);              break;                        case 'w':              $class_of_this = 'pfmsgrid-item--medium';              $img_arr = pointfinder_featured_image_getresized_ex($listing_meta,$listingtype_single,$template_directory_uri,1,0,564,277);              break;            default:              $class_of_this = 'pfmsgrid-item--box';              $img_arr = pointfinder_featured_image_getresized_ex($listing_meta,$listingtype_single,$template_directory_uri,1,0,277,277);              break;          }                              if (!empty($img_arr['featured_image'])) {                                    $term_link = get_term_link($term_info->slug,'pointfinderltypes');            if (isset($this_term_icon[0])) {              $iconimage = wp_get_attachment_image_src($this_term_icon[0], 'full');            }                        if (isset($iconimage[0])) {              $term_icon_area = '<div class="pf-main-term-icon-ct"><img src="'.$iconimage[0].'"></div>';            }            $output .= '<li class="pf-tiled-gallery-image pfgallery-item animated fadeIn pfmsgrid-item '.$class_of_this.'">';            $output .= '<div class="termgutter-sizer"><a href="'.$term_link.'">';              $output .= '<div class="PXXImageWrapper '.$background_effect.'"><img src="'.$img_arr['featured_image'].'" alt=""/><div class="ImageOverlayTi"></div><div class="ImageOverlayTix"></div><div class="pf-tiled-gallery-ctname"'.$textcolor_style.'>'.$term_info->name.'</div><div class="pf-tiled-gallery-ctcount"'.$textcolor_style.'>'.$term_count.'</div></div>';            $output .= '</a></div>';            $output .= '</li>';          }        }      $output .= '</ul>';      $output .= '<script>      (function($) {        "use strict";          $(function() {          var $grid = $(".'.$gridrandno_orj.'").masonry({            itemSelector: ".'.$gridrandno_orj.' .pfgallery-item",            layoutMode: "masonry",            columnWidth: ".'.$gridrandno_orj.' .pfmsgrid-item--box",            gutter: 10,          });          $grid.imagesLoaded().progress( function() {            $grid.masonry("layout");          });        });      })(jQuery);      </script>      ';    }    return $output;}add_shortcode( 'pftiled_listingtypes', 'pf_timage_of_listing_func' ); 